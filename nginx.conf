events {
    worker_connections 1024;
}

http {
    # ═══════════════════════════════════════════════════════════════
    # BASIC SETTINGS
    # ═══════════════════════════════════════════════════════════════
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json;
    
    # ═══════════════════════════════════════════════════════════════
    # HTTP → HTTPS REDIRECT
    # ═══════════════════════════════════════════════════════════════
    server {
        listen 80;
        server_name _;  # Replace with your domain or IP
        
        # Redirect to HTTPS
        return 301 https://$host$request_uri;
    }
    
    # ═══════════════════════════════════════════════════════════════
    # MAIN SERVER (HTTPS)
    # ═══════════════════════════════════════════════════════════════
    server {
        listen 443 ssl http2;
        server_name _;  # Replace with your domain or IP
        
        # ───────────────────────────────────────────────────────────
        # SSL CERTIFICATES
        # ───────────────────────────────────────────────────────────
        # OPTION 1: Self-signed certificate (for getting started)
        # Generate with:
        # openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        #   -keyout /path/to/ssl/selfsigned.key \
        #   -out /path/to/ssl/selfsigned.crt
        
        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
        
        # OPTION 2: Let's Encrypt (recommended for production)
        # ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        
        # ───────────────────────────────────────────────────────────
        # SSL SETTINGS (modern and secure)
        # ───────────────────────────────────────────────────────────
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Additional security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # ───────────────────────────────────────────────────────────
        # PROXY TO NIGHTSCOUT
        # ───────────────────────────────────────────────────────────
        location / {
            proxy_pass http://nightscout:1337;
            proxy_http_version 1.1;
            
            # WebSocket support (essential for real-time updates!)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # Headers for proper operation
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts (important for long requests)
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering off;
        }
        
        # ───────────────────────────────────────────────────────────
        # SPECIAL ENDPOINTS
        # ───────────────────────────────────────────────────────────
        
        # API endpoint
        location /api/ {
            proxy_pass http://nightscout:1337/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Socket.io for real-time data
        location /socket.io/ {
            proxy_pass http://nightscout:1337/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # ═══════════════════════════════════════════════════════════════
    # MONGO EXPRESS (optional, for debugging)
    # IMPORTANT: Accessible only from localhost!
    # ═══════════════════════════════════════════════════════════════
    server {
        listen 8081;
        server_name localhost;
        
        # Restrict access to localhost only
        allow 127.0.0.1;
        deny all;
        
        location / {
            proxy_pass http://mongo-express:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
